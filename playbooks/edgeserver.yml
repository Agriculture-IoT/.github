---
- name: First boot actions
  hosts: all
  gather_facts: false
  vars:
    ansible_user: pi
    ansible_ssh_private_key_file: ~/.ssh/pi
  tasks:
    - name: Ping host
      ansible.builtin.ping:

    - name: Update /etc/dhcpcd.conf
      ansible.builtin.lineinfile:
        path: /etc/dhcpcd.conf
        insertafter: EOF
        line: |
          interface wlan0
          metric 0
          interface wwan0
          metric 0
      become: true
      become_method: sudo

    - name: Disable WiFi power_save
      ansible.builtin.lineinfile:
        path: /etc/rc.local
        regexp: '^exit 0'
        insertbefore: 'exit 0'
        line: |
          iw wlan0 set power_save off
          iw dev wlan0 set power_save off
          export MTP_NO_PROBE="1"

          exit 0
      become: true
      become_method: sudo

    - name: Update /etc/apt/apt.conf.d/99force-ipv4
      ansible.builtin.lineinfile:
        path: /etc/apt/apt.conf.d/99force-ipv4
        insertafter: EOF
        line: |
          Acquire::ForceIPv4 "true";
        create: yes
      become: true
      become_method: sudo

    - name: Disable bluetooth service
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: stopped
        enabled: no
      loop: 
        - bluetooth.service
        - bluetooth.target
      become: true
      become_method: sudo

    - name: Disable console autologin
      ansible.builtin.file:
        path: "/etc/systemd/system/getty@tty1.service.d/autologin.conf"
        state: absent
      become: true
      become_method: sudo

    - name: Reboot after first boot steps
      ansible.builtin.reboot:
      become: true
      become_method: sudo

    - name: Wait for reboot
      ansible.builtin.wait_for_connection:
        delay: 10
        timeout: 300

- name: Setting up Edgeserver
  hosts: all
  gather_facts: false
  vars:
    ansible_user: pi
    ansible_ssh_private_key_file: ~/.ssh/pi
  tasks:
    - name: Ping host
      ansible.builtin.ping:

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes
      become: true
      become_method: sudo

    - name: Install required packages for this project
      ansible.builtin.shell: "apt install -y {{ item }}" 
      become: true
      become_method: sudo
      environment: 
        DEBIAN_FRONTEND: noninteractive
      loop: 
        - build-essential 
        - python3 
        - python3-pip
        - cmake 
        - libudev-dev
        - libusb-1.0-0-dev 
        - libffi-dev
        - libssl-dev
        - git
        - minicom
        - socat
        - libqmi-utils
        - udhcpc
        - mtr
        - gnutls-bin
        - p7zip-full
        - i2c-tools
        - gpsd
        - mlocate
        - vim 
        - docker
        - docker-compose
        - htop
        - atop
        
    - name: Stop docker services
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: stopped
        enabled: yes
      loop: 
        - docker.service 
        - docker.socket
      become: true
      become_method: sudo

    - name: Add docker group to user pi
      ansible.builtin.user:
        name: pi
        shell: /bin/bash
        groups: docker,gpio,i2c,spi
        append: yes
      become: true
      become_method: sudo

    - name: Upgrade all packages
      ansible.builtin.shell: "apt upgrade -y " 
      become: true
      become_method: sudo
      environment: 
        DEBIAN_FRONTEND: noninteractive

    - name: Remove useless packages from the cache
      ansible.builtin.apt:
        autoclean: yes
      become: true
      become_method: sudo

    - name: Remove dependencies that are no longer required
      ansible.builtin.apt:
        autoremove: yes
      become: true
      become_method: sudo

    - name: Run the equivalent of "apt-get clean" as a separate step
      apt:
        clean: yes
      become: true
      become_method: sudo

    - name: Start and Enable docker services
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: started
        enabled: yes
      loop: 
        - docker.service 
        - docker.socket
      become: true
      become_method: sudo
